#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass report
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a6paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation landscape
\suppress_date false
\use_refstyle 1
\backgroundcolor #000000
\fontcolor #ffffff
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Arduino C++ #1
\end_layout

\begin_layout Author
(C) Rich√®l Bilderbeek 
\begin_inset Graphics
	filename CC-BY-NC-SA.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Overzicht
\end_layout

\begin_layout Enumerate
Doel
\end_layout

\begin_layout Enumerate
Arduino IDE
\end_layout

\begin_layout Enumerate
'setup' en 'loop'
\end_layout

\begin_layout Enumerate
Fouten
\end_layout

\begin_layout Enumerate
data typen
\end_layout

\begin_layout Enumerate
if
\end_layout

\begin_layout Enumerate
for
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Doel
\end_layout

\begin_layout Itemize
Fouten leren lezen
\end_layout

\begin_layout Itemize
Internet zoektermen
\end_layout

\begin_layout Itemize
Basis van programmeren
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Arduino IDE
\end_layout

\begin_layout Itemize
Doel: gemakkelijk programmeren voor beginners (NB: voor gevorderden minder
 geschikt)
\end_layout

\begin_layout Itemize
taal: C++, volgens de C++03 standaard (niet C++0x, niet C++11)
\end_layout

\begin_layout Itemize
bibliotheken: C, Arduino
\end_layout

\begin_layout Itemize
voegt zelf nog dingen toe (zoals de main functie)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Van code naar machinetaal
\end_layout

\begin_layout Itemize
Code is bedoeld voor mensen om te lezen en te schrijven
\end_layout

\begin_layout Itemize
Een chip begrijpt alleen maar machinetaal
\end_layout

\begin_layout Itemize
Een compiler doet de vertaling van code naar machinetaal (NB: er zijn meer
 programma's die helpen, die noem ik vandaag allemaal 'compiler')
\end_layout

\begin_layout Itemize
De compiler is erg precies, en dat is goed
\end_layout

\begin_layout Itemize
De compiler heeft altijd gelijk!
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Minimum programma
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

void setup() {}
\end_layout

\begin_layout Plain Layout

void loop() {}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Fouten
\end_layout

\begin_layout Standard
De code:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

//(alle code gewist)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Foutmelding:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

core.a(main.cpp.o): 
\end_layout

\begin_layout Plain Layout

In function `main': /[...]/main.cpp:11: 
\end_layout

\begin_layout Plain Layout

undefined reference to `setup' 
\end_layout

\begin_layout Plain Layout

collect2: error: ld returned 1 exit status
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Kern:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

undefined reference to `setup' 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Wat bedoelt de compiler:
\end_layout

\begin_layout Standard
De compiler heeft gehoord dat 'setup' moet bestaan, maar kan deze niet vinden
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Opdracht
\end_layout

\begin_layout Itemize
Start 'Examples | Basics | Bare minimum'
\end_layout

\begin_layout Itemize
Probeer zoveel mogelijk verschillende fouten te maken, alleen in 'setup'
 ('loop' is immers precies hetzelfde)
\end_layout

\begin_layout Itemize
Noteer (1) de code (2) de kern van de foutmelding (3) wat je denkt dat de
 compiler bedoelt (4) laat ruimte over voor later; als je snapt wat de 
\end_layout

\begin_layout Itemize
Ik vind er met gemak achtien!
\end_layout

\begin_layout Itemize
Deze fouten zul je nog vaak tegen komen!
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Fouten
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

//Een letter weg
\end_layout

\begin_layout Plain Layout

oid setup() {}  
\end_layout

\begin_layout Plain Layout

vid setup() {} 
\end_layout

\begin_layout Plain Layout

vod setup() {} 
\end_layout

\begin_layout Plain Layout

voi setup() {} 
\end_layout

\begin_layout Plain Layout

voidsetup() {} 
\end_layout

\begin_layout Plain Layout

void etup() {} 
\end_layout

\begin_layout Plain Layout

void stup() {} 
\end_layout

\begin_layout Plain Layout

void seup() {} 
\end_layout

\begin_layout Plain Layout

void setp() {} 
\end_layout

\begin_layout Plain Layout

void setu() {} 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

void setup( {} 
\end_layout

\begin_layout Plain Layout

void setup) {} 
\end_layout

\begin_layout Plain Layout

void setup() } 
\end_layout

\begin_layout Plain Layout

void setup() {
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Een woord of tekencombinatie weg
\end_layout

\begin_layout Plain Layout

setup() {} 
\end_layout

\begin_layout Plain Layout

void () {} 
\end_layout

\begin_layout Plain Layout

void setup {} 
\end_layout

\begin_layout Plain Layout

void setup() 
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Variabelen en data typen
\end_layout

\begin_layout Itemize
Variabele: iets wat een computer moet onthouden, iets dat een mens kan lezen
\end_layout

\begin_layout Itemize
int: een geheel getal, bijvoorbeeld: een pin nummer, een aantal seconden
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

const int pin_led = 2;
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
double: een gebroken getal, bijvoorbeeld: een voltage
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

const double voltage = 3.3; //Volt
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
bool: een ja/nee, bijvoorbeeld: is de drukknop ingedrukt?
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

const bool is_ingedrukt = /* iets ingewikkelds */;
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
nog veel meer
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Ombouwen van data type
\end_layout

\begin_layout Itemize
Soms gebeurt dit stiekum of per ongeluk
\end_layout

\begin_layout Itemize
Maar dit kan ook open en expres, met static_cast
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

const int waarde 
\end_layout

\begin_layout Plain Layout

  = analogRead(A0);
\end_layout

\begin_layout Plain Layout

const double voltage 
\end_layout

\begin_layout Plain Layout

  = static_cast<double>(waarde) 
\end_layout

\begin_layout Plain Layout

  / 1024.0;
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
if statement
\end_layout

\begin_layout Itemize
Als je iets soms wel en soms niet wil
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

if (analogRead(A0) < 512) { digitalWrite(2,HIGH); }
\end_layout

\begin_layout Plain Layout

else { digitalWrite(2,LOW); }
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Teken
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Spreek uit
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
==
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
is gelijk aan
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
!= 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
is ongelijk aan
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
<
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
is kleiner dan
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
<=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
is kleiner of gelijk dan
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
>
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
is groter dan
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
>=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
is groter of gelijk dan
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
for loop
\end_layout

\begin_layout Itemize
Als je een teller wilt laten lopen
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

for (int teller=0; teller!=255; ++teller)
\end_layout

\begin_layout Plain Layout

{ 
\end_layout

\begin_layout Plain Layout

  analogWrite(2,teller); 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Lees dit als:
\end_layout

\begin_deeper
\begin_layout Enumerate
Zet een int genaamd 'teller' op de beginwaarde nul
\end_layout

\begin_layout Enumerate
Doe de code tussen accolades zo lang 'teller' niet gelijk is aan 255
\end_layout

\begin_layout Enumerate
Na de code tussen accolades: tel √©√©n op bij teller ('++teller') en ga naar
 stap 2
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Testen
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

void setup() 
\end_layout

\begin_layout Plain Layout

{ 
\end_layout

\begin_layout Plain Layout

  Serial.begin(9600); 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

void loop() 
\end_layout

\begin_layout Plain Layout

{   
\end_layout

\begin_layout Plain Layout

  const double x = 2.0 / 7.0; Serial.println(x);   
\end_layout

\begin_layout Plain Layout

  const int i = 123; Serial.println(i);   
\end_layout

\begin_layout Plain Layout

  const bool b = true; Serial.println(b);
\end_layout

\begin_layout Plain Layout

  for (int i=0; i!=255; ++i) Serial.println(i);  
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Opdracht
\end_layout

\begin_layout Itemize
Zoek een toepassing voor een if statement
\end_layout

\begin_layout Itemize
Zoek een toepassing voor een for loop
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\end_body
\end_document
