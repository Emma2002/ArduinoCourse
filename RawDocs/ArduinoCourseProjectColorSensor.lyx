#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Project: kleurensensor 
\end_layout

\begin_layout Author
(C) RichÃ¨l Bilderbeek 
\begin_inset Graphics
	filename /home/richel/GitHubs/ArduinoCourse/CC-BY-NC-SA.png

\end_inset


\end_layout

\begin_layout Section
Introductie
\end_layout

\begin_layout Standard
Een lichtsensor
\begin_inset Foot
status open

\begin_layout Plain Layout
ook wel 'licht-afhankelijk weerstand' of 'LDR' ('Light Dependent Resistance')
 genoemd
\end_layout

\end_inset

 kan geen kleur herkennen.
 Met behulp van een RGB LED kan dit wel.
\end_layout

\begin_layout Standard
Dit project bestaat uit meerdere onderdelen:
\end_layout

\begin_layout Itemize
Aansluiten RGB LED
\end_layout

\begin_layout Itemize
Aansluiten lichtsensor
\end_layout

\begin_layout Itemize
LED laten reageren op sensor
\end_layout

\begin_layout Itemize
Omprogrammeren naar kleurensensor
\end_layout

\begin_layout Section
Aansluiten RGB LED
\end_layout

\begin_layout Standard
Als je naief bent, sluit je een RGB LED aan als figuur 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ConnectRgbLedNaive"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename RgbLedNaive.png
	lyxscale 50
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:ConnectRgbLedNaive"

\end_inset

Aansluiten RGB LED op een naieve manier
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Wat is onjuist aan figuur 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ConnectRgbLedNaive"

\end_inset

? Wat zou er gebeuren als je dit zo aansluit?
\end_layout

\begin_layout Standard
Als je slim bent, sluit je een RGB LED aan als figuur 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ConnectRgbLed"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename RgbLed.png
	lyxscale 50
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:ConnectRgbLed"

\end_inset

Aansluiten RGB LED op een slimme manier
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Om een kleur van een RGB lampje aan te sturen kun je gebruik maken van het
 voorbeeld Fade
\begin_inset Foot
status open

\begin_layout Plain Layout
File -> Examples -> 01.
 Basics -> Fade
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Het laten schijnen van een LEDje gebeurt met de functie 'analogWrite', bijvoorbe
eld als volgt:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

analogWrite(9, 127);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Hierin wordt naar pin 9 de waarde 127 gestuurd, waardoor de LED op halve
 sterkte gaat branden.
\end_layout

\begin_layout Itemize
Sluit een RGB LED aan.
 Laat deze elke seconde een andere kleur geven, in de volgorde rood, geel
 (=rood + groen), groen, cyaan (=groen + blauw), blauw, magenta (=rood+blauw)
\end_layout

\begin_layout Standard
Algoritme 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:RgbLedCode"

\end_inset

 is een mogelijke oplossing.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\begin_inset listings
inline false
status open

\begin_layout Plain Layout

const int pin_rood = 9; 
\end_layout

\begin_layout Plain Layout

const int pin_groen = 10; 
\end_layout

\begin_layout Plain Layout

const int pin_blauw = 11;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

void setup() {
\end_layout

\begin_layout Plain Layout

  pinMode(pin_rood,  OUTPUT);
\end_layout

\begin_layout Plain Layout

  pinMode(pin_groen, OUTPUT);
\end_layout

\begin_layout Plain Layout

  pinMode(pin_blauw, OUTPUT); 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

void GeefKleur(
\end_layout

\begin_layout Plain Layout

  const int roodheid,
\end_layout

\begin_layout Plain Layout

  const int groenheid,
\end_layout

\begin_layout Plain Layout

  const int blauwheid)  
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

  analogWrite(pin_rood ,r);
\end_layout

\begin_layout Plain Layout

  analogWrite(pin_groen,g);
\end_layout

\begin_layout Plain Layout

  analogWrite(pin_blauw,b);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

void loop() {
\end_layout

\begin_layout Plain Layout

  GeefKleur(255,  0,  0); delay(500);
\end_layout

\begin_layout Plain Layout

  GeefKleur(255,255,  0); delay(500);
\end_layout

\begin_layout Plain Layout

  GeefKleur(  0,255,  0); delay(500);
\end_layout

\begin_layout Plain Layout

  GeefKleur(  0,255,255); delay(500);
\end_layout

\begin_layout Plain Layout

  GeefKleur(  0,  0,255); delay(500);
\end_layout

\begin_layout Plain Layout

  GeefKleur(255,  0,255); delay(500);
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:RgbLedCode"

\end_inset

RGB LED voorbeeld code 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Aansluiten lichtsensor
\end_layout

\begin_layout Standard
Als je naief bent, sluit je een lichtsensor aan als in figuur 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:SensorNaieve"

\end_inset

.
 Om de waarde van een lichtsensor te lezen, kun je het voorbeeldprogramma
 AnalogReadSerial
\begin_inset Foot
status open

\begin_layout Plain Layout
File -> Examples -> 01.
 Basics -> AnalogReadSerial
\end_layout

\end_inset

 gebruiken.
\end_layout

\begin_layout Standard
Het lezen van een sensor gebeurt met 'analogRead', bijvoorbeeld als volgt:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

int mijn_sensor_waarde = analogRead(A0);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Hierin wordt de waarde van pin A0 gelezen en opgeslagen in de variabele
 'mijn_sensor_waarde'.
\end_layout

\begin_layout Itemize
Kun je niet voorspellen welke waarde je gaat meten? Bouw dit schema en noteer
 het resultaat.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename SensorNaive.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:SensorNaieve"

\end_inset

Lichtsensor naief aangesloten
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Als je weet dat figuur 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:SensorNaieve"

\end_inset

 niet werkt, bouw je figuur 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:SensorCorrect"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename SensorCorrect.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:SensorCorrect"

\end_inset

Lichtsensor juist aangesloten
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Schrijf op welke waarde je meet in het donker en in het volle licht
\end_layout

\begin_layout Section
LED laten reageren op sensor
\end_layout

\begin_layout Standard
Stel je voor, de sensor meet waardes van 400 voor donker en 600 voor licht.
 Je weet dat een LED als waarde maximaal 255 kan krijgen.
 Een naieve manier om de LED aan te sturen is als vol
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

const int gemeten_waarde = analogRead(sensor_pin);
\end_layout

\begin_layout Plain Layout

analogWrite(led_pin,gemeten_waarde / 3);
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Wat is hiervan het nadeel? Tip: gaat het LEDje ooit volledig branden; gaat
 het LEDje ooit volledig uit? 
\end_layout

\begin_layout Standard
Een slimmere manier is de 'map' functie te gebruiken:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

const int gemeten_waarde = analogRead(sensor_pin);
\end_layout

\begin_layout Plain Layout

const int waarde_voor_led = map(gemeten_waarde,400,600,0,255);
\end_layout

\begin_layout Plain Layout

analogWrite(led_pin,waarde_voor_led);
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Laat de RGB LED reageren op de gemeten sensorwaarde.
 Laat deze bijvoorbeeld wit schijnen als er veel licht is.
\end_layout

\begin_layout Section
Omprogrammeren naar kleurensensor
\end_layout

\begin_layout Standard
Laat de LED om de beurt rood, groen en blauw branden.
 Laat de lichtsensors om de beurt de rood, groen en blauwwaarde meten van
 het ding waarop je schijnt.
 Laat dan de LED de kleur branden van het ding.
\end_layout

\end_body
\end_document
